subset(df, `Player Name` == "Aly Khalifa" & `Period Name` == "Warm Up")
subset(df, `Player Name` == "Aly Khalifa" & `Period Name` == "Warm Up")[5]
subset(df, `Player Name` == "Aly Khalifa" & `Period Name` == "Warm Up")[5]*15
for (player in players) {
proj[, player] <- NA
}
for (i in 1:length(players)){
for (j in 1:nrow(proj)){
proj[j,i+2] <- subset(df, `Player Name` == players[i] & `Period Name` == proj[1,i])[5]*proj[2,i]
}
}
subset(df, `Player Name` == players[1] & `Period Name` == proj[1,1])[5]*proj[2,1]
subset(df, `Player Name` == players[1] & `Period Name` == proj[1,1])
subset(df, `Player Name` == players[1] & `Period Name` == proj[1,1])[5]
proj[2,1]
for (i in 1:length(players)){
for (j in 1:nrow(proj)){
proj[j,i+2] <- subset(df, `Player Name` == players[i] & `Period Name` == proj[i,1])[5]*proj[i,2]
}
}
7.05*15
for (player in players) {
proj[, player] <- NA
}
for (i in 1:length(players)){
for (j in 1:nrow(proj)){
proj[j,i+2] <- subset(df, `Player Name` == players[i] & `Period Name` == proj[j,1])[5]*proj[j,2]
}
}
sums <- colSums(df[, -1], na.rm = TRUE)
df[, -1]
sums <- colSums(proj[, -1], na.rm = TRUE)
total_row <- c("Total", sums)
proj <- rbind(proj, total_row)
proj[,-1]
round(proj[,-1])
df[, -1] <- round(df[, -1], digits = 2)
for (i in 1:length(players)){
for (j in 1:nrow(proj)){
proj[j,i+2] <- subset(df, `Player Name` == players[i] & `Period Name` == proj[j,1])[5]*proj[j,2]
}
}
#Selecting variables of interest
variables <- c("Player Name", "Period Name", "Player Load Per Minute", "Total Player Load", "Total Duration")
df <- data.frame(matrix(ncol=4, nrow=0))
for (i in 1:length(games)){
dl <- games[[i]]
dl <- dl %>%
select(variables)
df <- rbind(df, dl)
}
df <- df %>%
mutate(`Period Name` = ifelse(`Period Name` == "full court", "Drill Full", `Period Name`)) %>%
mutate(`Period Name` = ifelse(`Period Name` == "warmup", "Warm Up", `Period Name`))
df <- df %>%
group_by(`Player Name`, `Period Name`) %>%
summarize(
`Total Duration` = sum(`Total Duration`),
`Total Player Load` = sum(`Total Player Load`)
) %>%
ungroup()
df$`Player Load Per Minute` <- (df$`Total Player Load`/as.integer(df$`Total Duration`))*60
players <- unique(df$`Player Name`)
proj <- data.frame("Period Name" = c("Warm Up", "Shooting", "Drill Full", "Drill Half", "Scrimmage"),
Duration = c(15, 20, 15, 15, 15))
for (player in players) {
proj[, player] <- NA
}
for (i in 1:length(players)){
for (j in 1:nrow(proj)){
proj[j,i+2] <- subset(df, `Player Name` == players[i] & `Period Name` == proj[j,1])[5]*proj[j,2]
}
}
proj %>%
bind_rows(summarise(., across(where(is.numeric), sum),
across(where(is.character), ~'Total')))
proj <- proj %>%
bind_rows(summarise(., across(where(is.numeric), sum),
across(where(is.character), ~'Total')))
proj[, -1]
proj[, -1] <- round(proj[, -1])
data.frame(colnames(proj))
ses <- data.frame()
ses[, colnames(proj)[i]] <- NA
for (i in 1:ncol(proj)){
ses[, colnames(proj)[i]] <- NA
}
for (i in 1:ncol(proj)){
ses[, colnames(proj)[i]]
}
players <- unique(df$`Player Name`)
proj <- data.frame("Period Name" = c("Warm Up", "Shooting", "Drill Full", "Drill Half", "Scrimmage"),
Duration = c(15*5, 20*5, 20*5, 20*5, 30))
for (player in players) {
proj[, player] <- NA
}
for (i in 1:length(players)){
for (j in 1:nrow(proj)){
proj[j,i+2] <- subset(df, `Player Name` == players[i] & `Period Name` == proj[j,1])[5]*proj[j,2]
}
}
proj <- proj %>%
bind_rows(summarise(., across(where(is.numeric), sum),
across(where(is.character), ~'Total')))
proj[, -1] <- round(proj[, -1])
week5 <- proj
players <- unique(df$`Player Name`)
proj <- data.frame("Period Name" = c("Warm Up", "Shooting", "Drill Full", "Drill Half", "Scrimmage"),
Duration = c(15*5, 20*5, 20*5, 20*5, 90))
for (player in players) {
proj[, player] <- NA
}
for (i in 1:length(players)){
for (j in 1:nrow(proj)){
proj[j,i+2] <- subset(df, `Player Name` == players[i] & `Period Name` == proj[j,1])[5]*proj[j,2]
}
}
proj <- proj %>%
bind_rows(summarise(., across(where(is.numeric), sum),
across(where(is.character), ~'Total')))
proj[, -1] <- round(proj[, -1])
week5 <- proj
week6 <- proj
players <- unique(df$`Player Name`)
proj <- data.frame("Period Name" = c("Warm Up", "Shooting", "Drill Full", "Drill Half", "Scrimmage"),
Duration = c(15*5, 20*5, 20*5, 20*5, 30))
for (player in players) {
proj[, player] <- NA
}
for (i in 1:length(players)){
for (j in 1:nrow(proj)){
proj[j,i+2] <- subset(df, `Player Name` == players[i] & `Period Name` == proj[j,1])[5]*proj[j,2]
}
}
proj <- proj %>%
bind_rows(summarise(., across(where(is.numeric), sum),
across(where(is.character), ~'Total')))
proj[, -1] <- round(proj[, -1])
week7 <- proj
View(week5)
View(week6)
### Projection Function
projection <- function(`Warm Up`, Shooting, `Drill Full`, `Drill Half`, Scrimmage){
players <- unique(df$`Player Name`)
proj <- data.frame("Period Name" = c("Warm Up", "Shooting", "Drill Full", "Drill Half", "Scrimmage"),
Duration = c(`Warm Up`, Shooting, `Drill Full`, `Drill Half`, Scrimmage))
for (player in players) {
proj[, player] <- NA
}
for (i in 1:length(players)){
for (j in 1:nrow(proj)){
proj[j,i+2] <- subset(df, `Player Name` == players[i] & `Period Name` == proj[j,1])[5]*proj[j,2]
}
}
proj <- proj %>%
bind_rows(summarise(., across(where(is.numeric), sum),
across(where(is.character), ~'Total')))
proj[, -1] <- round(proj[, -1])
}
View(games)
View(games[["Sep29"]])
View(games[["Sep28"]])
View(games[["Sep27"]])
### Projection Function
projection <- function(`Warm Up`, Shooting, `Drill Full`, `Drill Half`, Scrimmage){
players <- unique(df$`Player Name`)
proj <- data.frame("Period Name" = c("Warm Up", "Shooting", "Drill Full", "Drill Half", "Scrimmage"),
Duration = c(`Warm Up`, Shooting, `Drill Full`, `Drill Half`, Scrimmage))
for (player in players) {
proj[, player] <- NA
}
for (i in 1:length(players)){
for (j in 1:nrow(proj)){
proj[j,i+2] <- subset(df, `Player Name` == players[i] & `Period Name` == proj[j,1])[5]*proj[j,2]
}
}
proj <- proj %>%
bind_rows(summarise(., across(where(is.numeric), sum),
across(where(is.character), ~'Total')))
proj[, -1] <- round(proj[, -1])
return(proj)
}
# 5 Practices (15,20,30,30) + 30, 1 scrimmage (15, ..., 60)
week4 <- projection(`Warm Up` = 15*6, Shooting = 20*5, `Drill Full` = 30*5,`Drill Half` = 30*5, Scrimmage = 30 + 60)
View(week4)
# 5 Practices (15,20,30,30) + 30, 1 scrimmage (15, ..., 60)
week5 <- projection(`Warm Up` = 15*6, Shooting = 20*5, `Drill Full` = 30*5,`Drill Half` = 30*5, Scrimmage = 30 + 60)
# 5 Practices (15,20,30,30) + 30, 0 scrimmage (15, ..., 60)
week6 <- projection(`Warm Up` = 15*5, Shooting = 20*5, `Drill Full` = 30*5,`Drill Half` = 30*5, Scrimmage = 30)
library(tidyverse)
library(rlist)
library(lubridate)
library(DT)
library(shiny)
# Load in and Set Up Data
raw_names <- list.files("~/Desktop/BYUB/catapult/data/week4/") # Identify file names
split_names <- str_split(raw_names, c("_"))# Split file names
better_names <- c()  # Initialize vector
for (i in 1:length(raw_names)){ # Manipulate to format "MONDD")
better_names <- append(better_names, paste0(month.abb[as.numeric(split_names[[i]][2])] , split_names[[i]][3]))
}
games <- list()
for(i in 1:length(raw_names)) { # Read in data and add to list
games <- list.append(games,
read_csv(paste0("~/Desktop/BYUB/catapult/data/week4/",
raw_names[i]), skip = 9))
}
names(games) <- better_names # Change game names in list
#Selecting variables of interest
variables <- c("Player Name", "Period Name", "Player Load Per Minute", "Total Player Load", "Total Duration")
df <- data.frame(matrix(ncol=4, nrow=0))
for (i in 1:length(games)){
dl <- games[[i]]
dl <- dl %>%
select(variables)
df <- rbind(df, dl)
}
df <- df %>%
mutate(`Period Name` = ifelse(`Period Name` == "full court", "Drill Full", `Period Name`)) %>%
mutate(`Period Name` = ifelse(`Period Name` == "warmup", "Warm Up", `Period Name`))
df <- df %>%
group_by(`Player Name`, `Period Name`) %>%
summarize(
`Total Duration` = sum(`Total Duration`),
`Total Player Load` = sum(`Total Player Load`)
) %>%
ungroup()
df$`Player Load Per Minute` <- (df$`Total Player Load`/as.integer(df$`Total Duration`))*60
### Projection Function
projection <- function(`Warm Up`, Shooting, `Drill Full`, `Drill Half`, Scrimmage){
players <- unique(df$`Player Name`)
proj <- data.frame("Period Name" = c("Warm Up", "Shooting", "Drill Full", "Drill Half", "Scrimmage"),
Duration = c(`Warm Up`, Shooting, `Drill Full`, `Drill Half`, Scrimmage))
for (player in players) {
proj[, player] <- NA
}
for (i in 1:length(players)){
for (j in 1:nrow(proj)){
proj[j,i+2] <- subset(df, `Player Name` == players[i] & `Period Name` == proj[j,1])[5]*proj[j,2]
}
}
proj <- proj %>%
bind_rows(summarise(., across(where(is.numeric), sum),
across(where(is.character), ~'Total')))
proj[, -1] <- round(proj[, -1])
return(proj)
}
# 5 Practices (15,20,30,30) + 30, 1 scrimmage (15, ..., 60)
week5 <- projection(`Warm Up` = 15*6, Shooting = 20*5, `Drill Full` = 30*5,`Drill Half` = 30*5, Scrimmage = 30 + 60)
# 5 Practices (15,20,30,30) + 30, 1 scrimmage (15, ..., 60)
week6 <- projection(`Warm Up` = 15*6, Shooting = 20*5, `Drill Full` = 30*5,`Drill Half` = 30*5, Scrimmage = 30 + 60)
# 5 Practices (15,20,30,30) + 30, 0 scrimmage (15, ..., 60)
week7 <- projection(`Warm Up` = 15*5, Shooting = 20*5, `Drill Full` = 30*5,`Drill Half` = 30*5, Scrimmage = 30)
View(week5)
week5$week <- "Week 5"
week6$week <- "Week 6"
week7$week <- "Week 7"
combined_df <- bind_rows(week5, week6, week7)
View(combined_df)
combined_df %>%
filter(Period.Name == "Total")
combined_df <- bind_rows(week5, week6, week7)%>%
filter(Period.Name == "Total")
combined_df <- bind_rows(week5, week6, week7)%>%
filter(Period.Name == "Total") %>%
select(18, 3:17)
combined_df
combined_df
data_long <- data %>%
pivot_longer(cols = -Week, names_to = "Player", values_to = "Value")
data_long <- combined_df %>%
pivot_longer(cols = -Week, names_to = "Player", values_to = "Value")
data_long <- combined_df %>%
pivot_longer(cols = -week, names_to = "Player", values_to = "Value")
View(data_long)
View(df)
13109/60
View(week5)
combined_df <- bind_rows(week5, week6, week7)%>%
filter(Period.Name == "Total") %>%
select(18, 3:17) %>%
pivot_longer(cols = -week, names_to = "Player", values_to = "Value")
ggplot(combined_df, aes(x = Player, y = Value, fill = week)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Player Performance Over Weeks",
x = "Player",
y = "Value") +
theme_minimal()
ggplot(combined_df, aes(x = Player, y = Value, fill = week)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Player Performance Over Weeks",
x = "Player",
y = "Value") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(combined_df, aes(x = Player, y = Value, fill = week)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Player Load Projection",
x = "Player",
y = "Total Player Load") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(combined_df, aes(x = Player, y = Value, fill = week)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Player Load History and Projection",
x = "Player",
y = "Total Player Load") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(week5)
105/15
# Adding in week 4
week4 <- df %>%
filter(`Period Name` != "Session")
# Adding in week 4
week4 <- df %>%
filter(`Period Name` != "Session") %>%
filter(`Period Name` != "Weight Room")
View(week4)
# Adding in week 4
week4 <- df %>%
filter(`Period Name` != "Session") %>%
filter(`Period Name` != "Weight Room") %>%
select(2,1,4)
# Adding in week 4
week4 <- df %>%
filter(`Period Name` != "Session") %>%
filter(`Period Name` != "Weight Room") %>%
select(2,1,4) %>%
group_by(`Player Name`) %>%
summarize(
`week` = "Week 4",
`Value` = sum(`Total Player Load`)
)
# Adding in week 4
week4 <- df %>%
filter(`Period Name` != "Session") %>%
filter(`Period Name` != "Weight Room") %>%
select(2,1,4) %>%
group_by(`Player Name`) %>%
summarize(
`week` = "Week 4",
`Value` = sum(`Total Player Load`)
) %>%
select(2,1,3)
colnames(week4)[2]
colnames(week4)[2] <- "Player"
library(tidyverse)
library(rlist)
library(lubridate)
library(DT)
library(shiny)
# Load in and Set Up Data
raw_names <- list.files("~/Desktop/BYUB/catapult/data/week4/") # Identify file names
split_names <- str_split(raw_names, c("_"))# Split file names
better_names <- c()  # Initialize vector
for (i in 1:length(raw_names)){ # Manipulate to format "MONDD")
better_names <- append(better_names, paste0(month.abb[as.numeric(split_names[[i]][2])] , split_names[[i]][3]))
}
games <- list()
for(i in 1:length(raw_names)) { # Read in data and add to list
games <- list.append(games,
read_csv(paste0("~/Desktop/BYUB/catapult/data/week4/",
raw_names[i]), skip = 9))
}
names(games) <- better_names # Change game names in list
#Selecting variables of interest
variables <- c("Player Name", "Period Name", "Player Load Per Minute", "Total Player Load", "Total Duration")
df <- data.frame(matrix(ncol=4, nrow=0))
for (i in 1:length(games)){
dl <- games[[i]]
dl <- dl %>%
select(variables)
df <- rbind(df, dl)
}
df <- df %>%
mutate(`Period Name` = ifelse(`Period Name` == "full court", "Drill Full", `Period Name`)) %>%
mutate(`Period Name` = ifelse(`Period Name` == "warmup", "Warm Up", `Period Name`))
df <- df %>%
group_by(`Player Name`, `Period Name`) %>%
summarize(
`Total Duration` = sum(`Total Duration`),
`Total Player Load` = sum(`Total Player Load`)
) %>%
ungroup()
df$`Player Load Per Minute` <- (df$`Total Player Load`/as.integer(df$`Total Duration`))*60
### Projection Function
projection <- function(`Warm Up`, Shooting, `Drill Full`, `Drill Half`, Scrimmage){
players <- unique(df$`Player Name`)
proj <- data.frame("Period Name" = c("Warm Up", "Shooting", "Drill Full", "Drill Half", "Scrimmage"),
Duration = c(`Warm Up`, Shooting, `Drill Full`, `Drill Half`, Scrimmage))
for (player in players) {
proj[, player] <- NA
}
for (i in 1:length(players)){
for (j in 1:nrow(proj)){
proj[j,i+2] <- subset(df, `Player Name` == players[i] & `Period Name` == proj[j,1])[5]*proj[j,2]
}
}
proj <- proj %>%
bind_rows(summarise(., across(where(is.numeric), sum),
across(where(is.character), ~'Total')))
proj[, -1] <- round(proj[, -1])
return(proj)
}
# 5 Practices (15,20,30,30) + 30, 1 scrimmage (15, ..., 60)
week5 <- projection(`Warm Up` = 15*6, Shooting = 20*5, `Drill Full` = 30*5,`Drill Half` = 30*5, Scrimmage = 30 + 60)
# 5 Practices (15,20,30,30) + 30, 1 scrimmage (15, ..., 60)
week6 <- projection(`Warm Up` = 15*6, Shooting = 20*5, `Drill Full` = 30*5,`Drill Half` = 30*5, Scrimmage = 30 + 60)
# 5 Practices (15,20,30,30) + 30, 0 scrimmage (15, ..., 60)
week7 <- projection(`Warm Up` = 15*5, Shooting = 20*5, `Drill Full` = 30*5,`Drill Half` = 30*5, Scrimmage = 30)
# Adding in week 4
week4 <- df %>%
filter(`Period Name` != "Session") %>%
filter(`Period Name` != "Weight Room") %>%
select(2,1,4) %>%
group_by(`Player Name`) %>%
summarize(
`week` = "Week 4",
`Value` = sum(`Total Player Load`)
) %>%
select(2,1,3)
colnames(week4)[2] <- "Player"
week5$week <- "Week 5"
week6$week <- "Week 6"
week7$week <- "Week 7"
combined_df <- bind_rows(week4,week5, week6, week7)%>%
filter(Period.Name == "Total") %>%
select(18, 3:17) %>%
pivot_longer(cols = -week, names_to = "Player", values_to = "Value")
combined_df <- bind_rows(week5, week6, week7)%>%
filter(Period.Name == "Total") %>%
select(18, 3:17) %>%
pivot_longer(cols = -week, names_to = "Player", values_to = "Value")
View(combined_df)
cbind(week4, combined_df)
rbind(week4, combined_df)
combined_df <- rbind(week4, combined_df)
ggplot(combined_df, aes(x = Player, y = Value, fill = week)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Player Load History and Projection",
x = "Player",
y = "Total Player Load") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(week4)
View(df)
13109/60
13109/60/7
9602/60/7
4732/60/7
7145/60/7
3775/60/7
# Loading Packages
library(tidyverse)
library(tidymodels)
library(vroom)
library(poissonreg)
library(rpart)
library(ranger)
library(stacks)
library(embed)
library(discrim)
library(naivebayes)
library(kknn)
library(kernlab)
library(themis)
library(keras)
library(bonsai)
library(lightgbm)
library(dbarts)
# Reading in Data
setwd("~/Desktop/Stat348/Forest-Cover/")
train <- vroom("train.csv")
test <- vroom("test.csv")
train$Cover_Type <- as.factor(train$Cover_Type)
my_recipe <- recipe(Cover_Type ~ ., data = train) %>%
update_role(Id, new_role = "ID") %>%
#step_mutate_at(all_numeric_predictors(), fn = factor) %>% # turn all numeric features into factors
#step_other(all_factor_predictors(), threshold = .005) %>% # combines categorical values that occur <5% into an "other" value
#step_dummy(all_nominal_predictors()) # dummy variable encoding
step_lencode_mixed(all_nominal_predictors(), outcome = vars(Cover_Type))  #target encoding
bake(prep(my_recipe), new_data = train)
rf_mod <- rand_forest(mtry = tune(),
min_n=tune(),
trees=500) %>%
set_engine("ranger") %>%
set_mode("classification")
rf_wf <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(rf_mod)
rf_tuning_grid <- grid_regular(mtry(c(1,ncol(train))), min_n(), levels=10)
folds <- vfold_cv(train, v = 3, repeats = 1)
tune_control <- control_grid(verbose = TRUE)
rf_results <- rf_wf %>%
tune_grid(resamples = folds,
grid = rf_tuning_grid,
metrics = metric_set(accuracy),
control = tune_control)
rf_bestTune <- rf_results %>%
select_best("accuracy")
rf_final_wf <- rf_wf %>%
finalize_workflow(rf_bestTune) %>%
fit(data=train)
rf_preds <- predict(rf_final_wf,
new_data=test,
type="class")
rf_submit <- as.data.frame(cbind(as.integer(test$Id), as.character(svm_preds$.pred_class)))
rf_submit <- as.data.frame(cbind(as.integer(test$Id), as.character(rf_preds$.pred_class)))
colnames(rf_submit) <- c("Id", "Cover_Type")
write_csv(rf_submit, "rf_submit.csv")
View(rf_submit)
